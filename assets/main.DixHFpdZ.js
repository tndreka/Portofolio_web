(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=t(n);fetch(n.href,r)}})();class h{constructor(e){this.username=e,this.apiBase="https://api.github.com",this.cache=new Map,this.cacheExpiry=36e5}async fetchWithCache(e){const t=Date.now(),s=this.cache.get(e);if(s&&t-s.timestamp<this.cacheExpiry)return s.data;try{const n=await fetch(e);if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const r=await n.json();return this.cache.set(e,{data:r,timestamp:t}),r}catch(n){return console.error("Error fetching from GitHub API:",n),null}}async getUserRepos(){const e=`${this.apiBase}/users/${this.username}/repos?type=all&per_page=100`;return await this.fetchWithCache(e)}async getRepoCommits(e){const t=`${this.apiBase}/repos/${this.username}/${e}/commits?author=${this.username}&per_page=100`;return await this.fetchWithCache(t)}async calculateCodingHours(){try{const e=await this.getUserRepos();if(!e)return{hours:539,projects:27,technologies:15};let t=0,s=e.length,n=new Set;for(const a of e.slice(0,20)){const c=await this.getRepoCommits(a.name);c&&(t+=c.length),a.language&&n.add(a.language)}const r=Math.round(t*2);return{hours:r>0?r:539,projects:s>0?s:27,technologies:n.size>0?n.size:15,commits:t}}catch(e){return console.error("Error calculating coding hours:",e),{hours:539,projects:27,technologies:15}}}async getContributionStats(){try{const e=await this.getUserRepos();if(!e)return null;const t={totalStars:0,totalForks:0,publicRepos:e.filter(s=>!s.private).length,languages:new Set};return e.forEach(s=>{t.totalStars+=s.stargazers_count||0,t.totalForks+=s.forks_count||0,s.language&&t.languages.add(s.language)}),{...t,languages:Array.from(t.languages)}}catch(e){return console.error("Error fetching contribution stats:",e),null}}}const m=new h("tndreka");function d(){document.querySelectorAll(".stat-number").forEach(e=>{const t=parseInt(e.getAttribute("data-target")),n=t/(2e3/16);let r=0;const a=setInterval(()=>{r+=n,r>=t?(e.textContent=t,clearInterval(a)):e.textContent=Math.floor(r)},16)})}async function i(){try{const o=await m.calculateCodingHours(),e={projects:document.querySelector('[data-target="27"]'),technologies:document.querySelector('[data-target="15"]'),hours:document.querySelector('[data-target="539"]')};e.projects&&(e.projects.setAttribute("data-target",o.projects),e.projects.textContent=o.projects),e.technologies&&(e.technologies.setAttribute("data-target",o.technologies),e.technologies.textContent=o.technologies),e.hours&&(e.hours.setAttribute("data-target",o.hours),e.hours.textContent=o.hours),d(),console.log("Dynamic stats updated:",o)}catch(o){console.error("Error updating dynamic stats:",o)}}console.log("GitHub stats module loaded");console.log("Main script loaded");function l(){console.log("Initializing app..."),p(),y(),v(),b(),S(),w(),L(),f()}function f(){setInterval(()=>{console.log("🔄 Automatic stats update triggered"),i()},30*60*1e3),document.addEventListener("visibilitychange",()=>{document.hidden||(console.log("👁️ Page visible again, checking for stats updates"),i())});let o;const e=()=>{clearTimeout(o),o=setTimeout(()=>{console.log("🔄 User active again, refreshing stats"),i()},5*60*1e3)};["mousedown","mousemove","keypress","scroll","touchstart"].forEach(t=>{document.addEventListener(t,e,!0)})}function p(){const o=document.getElementById("hamburger"),e=document.getElementById("nav-menu"),t=document.querySelectorAll(".nav-link");o&&e&&(o.addEventListener("click",()=>{o.classList.toggle("active"),e.classList.toggle("active")}),t.forEach(s=>{s.addEventListener("click",()=>{o.classList.remove("active"),e.classList.remove("active")})})),window.addEventListener("scroll",E)}function y(){console.log("🌙 Initializing theme toggle...");const o=document.getElementById("theme-toggle"),e=document.documentElement;if(o){console.log("✅ Theme toggle button found");const t=localStorage.getItem("theme")||"light";console.log("💾 Saved theme:",t),e.setAttribute("data-theme",t),u(t),o.addEventListener("click",()=>{console.log("🖱️ Theme toggle clicked");const s=e.getAttribute("data-theme"),n=s==="light"?"dark":"light";console.log("🔄 Switching from",s,"to",n),e.setAttribute("data-theme",n),localStorage.setItem("theme",n),u(n)})}else console.error("❌ Theme toggle button not found!")}function u(o){console.log("🎨 Updating theme icon for:",o);const e=document.getElementById("theme-toggle"),t=e==null?void 0:e.querySelector("i");t?o==="dark"?(t.className="fas fa-sun",console.log("☀️ Set sun icon for dark theme")):(t.className="fas fa-moon",console.log("🌙 Set moon icon for light theme")):console.error("❌ Theme toggle icon not found!")}function v(){const o=document.getElementById("loader");window.addEventListener("load",()=>{o&&(o.style.opacity="0",setTimeout(()=>{o.style.display="none"},500))})}function b(){const o=document.querySelector(".profile-img");if(o){console.log("🖼️ Profile image element found");const e=new Image;e.onload=function(){console.log("✅ Profile image loaded successfully"),o.src=this.src,o.style.display="block";const r=o.parentNode.querySelector(".profile-img-placeholder");r&&r.remove()},e.onerror=function(){console.log("❌ Profile image failed to load, using placeholder"),g(o)};const t=["/photo.jpeg","./photo.jpeg","./public/photo.jpeg","https://via.placeholder.com/400x400/667eea/ffffff?text=TN"];let s=0;const n=()=>{s<t.length?(console.log(`🔄 Trying image path: ${t[s]}`),e.src=t[s],s++):(console.log("🎨 Using custom placeholder"),g(o))};e.onerror=n,n()}}function g(o){if(o.parentNode.querySelector(".profile-img-placeholder"))return;const t=document.createElement("div");t.className="profile-img-placeholder",t.innerHTML="<span>TN</span>",o.style.display="none",o.parentNode.appendChild(t),t.addEventListener("click",()=>{t.style.background=`linear-gradient(135deg, #${Math.floor(Math.random()*16777215).toString(16)} 0%, #${Math.floor(Math.random()*16777215).toString(16)} 100%)`})}function S(){console.log("📊 Initializing stats...");const o=document.querySelector(".about-stats");if(o){const e=new IntersectionObserver(t=>{t.forEach(s=>{s.isIntersecting&&(console.log("📊 Stats section in view, starting animation"),s.target.querySelectorAll(".stat-number").forEach(r=>r.classList.add("animating")),d(),console.log("🔄 Attempting to fetch GitHub stats..."),i().then(()=>{console.log("✅ GitHub stats updated successfully")}).catch(r=>{console.log("⚠️ Using fallback stats values:",r.message)}),e.unobserve(s.target))})},{threshold:.3});e.observe(o)}}function w(){document.querySelectorAll('a[href^="#"]').forEach(e=>{e.addEventListener("click",function(t){t.preventDefault();const s=this.getAttribute("href"),n=document.querySelector(s);if(n){const r=document.querySelector(".navbar").offsetHeight,a=n.offsetTop-r;window.scrollTo({top:a,behavior:"smooth"})}})})}function E(){const o=document.querySelectorAll("section[id]"),e=document.querySelectorAll(".nav-link"),t=window.scrollY+100;o.forEach(s=>{const n=s.offsetTop,r=s.offsetHeight,a=s.getAttribute("id");t>=n&&t<n+r&&e.forEach(c=>{c.classList.remove("active"),c.getAttribute("href")===`#${a}`&&c.classList.add("active")})})}function L(){const o=document.querySelectorAll(".skill-progress"),e=new IntersectionObserver(t=>{t.forEach(s=>{if(s.isIntersecting){const n=s.target,r=n.getAttribute("data-level");setTimeout(()=>{n.style.width=r+"%"},200),e.unobserve(s.target)}})},{threshold:.5});o.forEach(t=>{e.observe(t)})}window.testThemeSwitch=function(){console.log("🧪 Manual theme switch test");const o=document.documentElement,e=o.getAttribute("data-theme")||"light",t=e==="light"?"dark":"light";console.log("🔄 Manually switching from",e,"to",t),o.setAttribute("data-theme",t),localStorage.setItem("theme",t),u(t),console.log("✅ Manual theme switch complete. Current data-theme:",o.getAttribute("data-theme"))};document.addEventListener("DOMContentLoaded",()=>{l()});document.readyState==="loading"?document.addEventListener("DOMContentLoaded",l):l();
