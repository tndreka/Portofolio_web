(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();class h{constructor(t){this.username=t,this.apiBase="https://api.github.com",this.cache=new Map,this.cacheExpiry=36e5}async fetchWithCache(t){const e=Date.now(),n=this.cache.get(t);if(n&&e-n.timestamp<this.cacheExpiry)return n.data;try{const s=await fetch(t);if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const r=await s.json();return this.cache.set(t,{data:r,timestamp:e}),r}catch(s){return console.error("Error fetching from GitHub API:",s),null}}async getUserRepos(){const t=`${this.apiBase}/users/${this.username}/repos?type=all&per_page=100`;return await this.fetchWithCache(t)}async getRepoCommits(t){const e=`${this.apiBase}/repos/${this.username}/${t}/commits?author=${this.username}&per_page=100`;return await this.fetchWithCache(e)}async calculateCodingHours(){try{const t=await this.getUserRepos();if(!t)return{hours:539,projects:27,technologies:15};let e=0,n=t.length,s=new Set;for(const a of t.slice(0,20)){const c=await this.getRepoCommits(a.name);c&&(e+=c.length),a.language&&s.add(a.language)}const r=Math.round(e*2);return{hours:r>0?r:539,projects:n>0?n:27,technologies:s.size>0?s.size:15,commits:e}}catch(t){return console.error("Error calculating coding hours:",t),{hours:539,projects:27,technologies:15}}}async getContributionStats(){try{const t=await this.getUserRepos();if(!t)return null;const e={totalStars:0,totalForks:0,publicRepos:t.filter(n=>!n.private).length,languages:new Set};return t.forEach(n=>{e.totalStars+=n.stargazers_count||0,e.totalForks+=n.forks_count||0,n.language&&e.languages.add(n.language)}),{...e,languages:Array.from(e.languages)}}catch(t){return console.error("Error fetching contribution stats:",t),null}}}const m=new h("tndreka");function g(){document.querySelectorAll(".stat-number").forEach(t=>{const e=parseInt(t.getAttribute("data-target")),s=e/(2e3/16);let r=0;const a=setInterval(()=>{r+=s,r>=e?(t.textContent=e,clearInterval(a)):t.textContent=Math.floor(r)},16)})}async function i(){try{const o=await m.calculateCodingHours(),t={projects:document.querySelector('[data-target="27"]'),technologies:document.querySelector('[data-target="15"]'),hours:document.querySelector('[data-target="539"]')};t.projects&&(t.projects.setAttribute("data-target",o.projects),t.projects.textContent=o.projects),t.technologies&&(t.technologies.setAttribute("data-target",o.technologies),t.technologies.textContent=o.technologies),t.hours&&(t.hours.setAttribute("data-target",o.hours),t.hours.textContent=o.hours),g(),console.log("Dynamic stats updated:",o)}catch(o){console.error("Error updating dynamic stats:",o)}}console.log("GitHub stats module loaded");console.log("Main script loaded");function l(){console.log("Initializing app..."),p(),y(),v(),b(),S(),E(),L(),f()}function f(){setInterval(()=>{console.log("🔄 Automatic stats update triggered"),i()},30*60*1e3),document.addEventListener("visibilitychange",()=>{document.hidden||(console.log("👁️ Page visible again, checking for stats updates"),i())});let o;const t=()=>{clearTimeout(o),o=setTimeout(()=>{console.log("🔄 User active again, refreshing stats"),i()},5*60*1e3)};["mousedown","mousemove","keypress","scroll","touchstart"].forEach(e=>{document.addEventListener(e,t,!0)})}function p(){const o=document.getElementById("hamburger"),t=document.getElementById("nav-menu"),e=document.querySelectorAll(".nav-link");o&&t&&(o.addEventListener("click",()=>{o.classList.toggle("active"),t.classList.toggle("active")}),e.forEach(n=>{n.addEventListener("click",()=>{o.classList.remove("active"),t.classList.remove("active")})})),window.addEventListener("scroll",w)}function y(){const o=document.getElementById("theme-toggle"),t=document.documentElement;if(o){const e=localStorage.getItem("theme")||"light";t.setAttribute("data-theme",e),u(e),o.addEventListener("click",()=>{const s=t.getAttribute("data-theme")==="light"?"dark":"light";t.setAttribute("data-theme",s),localStorage.setItem("theme",s),u(s)})}}function u(o){const t=document.getElementById("theme-toggle"),e=t==null?void 0:t.querySelector("i");e&&(o==="dark"?e.className="fas fa-sun":e.className="fas fa-moon")}function v(){const o=document.getElementById("loader");window.addEventListener("load",()=>{o&&(o.style.opacity="0",setTimeout(()=>{o.style.display="none"},500))})}function b(){const o=document.querySelector(".profile-img");if(o){console.log("🖼️ Profile image element found");const t=new Image;t.onload=function(){console.log("✅ Profile image loaded successfully"),o.src=this.src,o.style.display="block";const r=o.parentNode.querySelector(".profile-img-placeholder");r&&r.remove()},t.onerror=function(){console.log("❌ Profile image failed to load, using placeholder"),d(o)};const e=["/photo.jpeg","./photo.jpeg","./public/photo.jpeg","https://via.placeholder.com/400x400/667eea/ffffff?text=TN"];let n=0;const s=()=>{n<e.length?(console.log(`🔄 Trying image path: ${e[n]}`),t.src=e[n],n++):(console.log("🎨 Using custom placeholder"),d(o))};t.onerror=s,s()}}function d(o){if(o.parentNode.querySelector(".profile-img-placeholder"))return;const e=document.createElement("div");e.className="profile-img-placeholder",e.innerHTML="<span>TN</span>",o.style.display="none",o.parentNode.appendChild(e),e.addEventListener("click",()=>{e.style.background=`linear-gradient(135deg, #${Math.floor(Math.random()*16777215).toString(16)} 0%, #${Math.floor(Math.random()*16777215).toString(16)} 100%)`})}function S(){console.log("📊 Initializing stats...");const o=document.querySelector(".about-stats");if(o){const t=new IntersectionObserver(e=>{e.forEach(n=>{n.isIntersecting&&(console.log("📊 Stats section in view, starting animation"),n.target.querySelectorAll(".stat-number").forEach(r=>r.classList.add("animating")),g(),console.log("🔄 Attempting to fetch GitHub stats..."),i().then(()=>{console.log("✅ GitHub stats updated successfully")}).catch(r=>{console.log("⚠️ Using fallback stats values:",r.message)}),t.unobserve(n.target))})},{threshold:.3});t.observe(o)}}function E(){document.querySelectorAll('a[href^="#"]').forEach(t=>{t.addEventListener("click",function(e){e.preventDefault();const n=this.getAttribute("href"),s=document.querySelector(n);if(s){const r=document.querySelector(".navbar").offsetHeight,a=s.offsetTop-r;window.scrollTo({top:a,behavior:"smooth"})}})})}function w(){const o=document.querySelectorAll("section[id]"),t=document.querySelectorAll(".nav-link"),e=window.scrollY+100;o.forEach(n=>{const s=n.offsetTop,r=n.offsetHeight,a=n.getAttribute("id");e>=s&&e<s+r&&t.forEach(c=>{c.classList.remove("active"),c.getAttribute("href")===`#${a}`&&c.classList.add("active")})})}function L(){const o=document.querySelectorAll(".skill-progress"),t=new IntersectionObserver(e=>{e.forEach(n=>{if(n.isIntersecting){const s=n.target,r=s.getAttribute("data-level");setTimeout(()=>{s.style.width=r+"%"},200),t.unobserve(n.target)}})},{threshold:.5});o.forEach(e=>{t.observe(e)})}document.addEventListener("DOMContentLoaded",()=>{l()});document.readyState==="loading"?document.addEventListener("DOMContentLoaded",l):l();
